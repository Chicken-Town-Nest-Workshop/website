"use strict";(self.webpackChunkchicken_city=self.webpackChunkchicken_city||[]).push([[9877],{9613:(e,r,n)=>{n.d(r,{Zo:()=>u,kt:()=>f});var t=n(9496);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function o(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=c(n),m=s,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||a;return n?t.createElement(f,i(i({ref:r},u),{},{components:n})):t.createElement(f,i({ref:r},u))}));function f(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=n.length,i=new Array(a);i[0]=m;var o={};for(var l in r)hasOwnProperty.call(r,l)&&(o[l]=r[l]);o.originalType=e,o[d]="string"==typeof e?e:s,i[1]=o;for(var c=2;c<a;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8485:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var t=n(8028),s=(n(9496),n(9613));const a={sidebar_position:40,description:"\u5c07 Service \u62bd\u8c61\u5316",key:["NestJS","Node","TypeScript","\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247","Design Pattern"],tags:["NestJS","Node","TypeScript","\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247","Design Pattern"]},i="\ud83d\udc14 \u5c07 Service \u62bd\u8c61\u5316",o={unversionedId:"nest/cerateServiceInterface",id:"nest/cerateServiceInterface",title:"\ud83d\udc14 \u5c07 Service \u62bd\u8c61\u5316",description:"\u5c07 Service \u62bd\u8c61\u5316",source:"@site/docs/nest/cerateServiceInterface.md",sourceDirName:"nest",slug:"/nest/cerateServiceInterface",permalink:"/docs/nest/cerateServiceInterface",draft:!1,editUrl:"https://github.com/Chicken-Town-Nest-Workshop/website/tree/main/docs/nest/cerateServiceInterface.md",tags:[{label:"NestJS",permalink:"/docs/tags/nest-js"},{label:"Node",permalink:"/docs/tags/node"},{label:"TypeScript",permalink:"/docs/tags/type-script"},{label:"\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247",permalink:"/docs/tags/\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247"},{label:"Design Pattern",permalink:"/docs/tags/design-pattern"}],version:"current",lastUpdatedAt:1696516113,formattedLastUpdatedAt:"2023\u5e7410\u67085\u65e5",sidebarPosition:40,frontMatter:{sidebar_position:40,description:"\u5c07 Service \u62bd\u8c61\u5316",key:["NestJS","Node","TypeScript","\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247","Design Pattern"],tags:["NestJS","Node","TypeScript","\u7269\u4ef6\u5c0e\u5411\u8a2d\u8a08\u539f\u5247","Design Pattern"]},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udc14 \u5efa\u7acb\u4e00\u500b\u65b0\u7684\u6a21\u7d44",permalink:"/docs/nest/createModul"},next:{title:"\ud83d\udc14 \u5168\u57df\u5de5\u5177\u5305 UUID",permalink:"/docs/nest/createUtail"}},l={},c=[{value:"\u95dc\u65bc\u62bd\u8c61\u5316",id:"\u95dc\u65bc\u62bd\u8c61\u5316",level:2},{value:"Service \u62bd\u8c61\u5316",id:"service-\u62bd\u8c61\u5316",level:2},{value:"\u5efa\u7acb interface",id:"\u5efa\u7acb-interface",level:3},{value:"\u7e7c\u627f\u4e26\u5be6\u4f5c\u4ecb\u9762",id:"\u7e7c\u627f\u4e26\u5be6\u4f5c\u4ecb\u9762",level:3},{value:"\u5c07\u670d\u52d9\u8a3b\u518a\u5230 module",id:"\u5c07\u670d\u52d9\u8a3b\u518a\u5230-module",level:3},{value:"\u4f9d\u8cf4\u53cd\u8f49",id:"\u4f9d\u8cf4\u53cd\u8f49",level:2},{value:"\u5728 Controller \u4f9d\u8cf4\u62bd\u8c61",id:"\u5728-controller-\u4f9d\u8cf4\u62bd\u8c61",level:3},{value:"\u5b8c\u6574 controller \u7a0b\u5f0f\u78bc",id:"\u5b8c\u6574-controller-\u7a0b\u5f0f\u78bc",level:3}],u={toc:c},d="wrapper";function p(e){let{components:r,...n}=e;return(0,s.kt)(d,(0,t.Z)({},u,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"-\u5c07-service-\u62bd\u8c61\u5316"},"\ud83d\udc14 \u5c07 Service \u62bd\u8c61\u5316"),(0,s.kt)("h2",{id:"\u95dc\u65bc\u62bd\u8c61\u5316"},"\u95dc\u65bc\u62bd\u8c61\u5316"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u6703\u9032\u884c\u62bd\u8c61\u5316\u7684\u5e7e\u500b\u4e3b\u8981\u539f\u56e0",(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},"\u9032\u884c\u55ae\u5143\u6e2c\u8a66\u524d\uff0c\u9700\u8981\u505a\u8cc7\u6599\u9694\u96e2"),(0,s.kt)("li",{parentName:"ul"},"\u7b26\u5408",(0,s.kt)("inlineCode",{parentName:"li"},"\u4ecb\u9762\u9694\u96e2\u539f\u5247"),"\u8b93\u6a21\u7d44\u4e4b\u9593\u7684\u8026\u5408\u5ea6\u964d\u4f4e\uff0c\u78ba\u4fdd\u5f8c\u7e8c\u7684\u7dad\u8b77\u8207\u4fee\u6539\u53ef\u4ee5\u66f4\u5bb9\u6613\u7684\u9032\u884c"),(0,s.kt)("li",{parentName:"ul"},"\u7b26\u5408",(0,s.kt)("inlineCode",{parentName:"li"},"\u4f9d\u8cf4\u53cd\u8f49\u539f\u5247"),"\u8b93\u5176\u4ed6\u547c\u53eb\u8005\uff0c\u4f9d\u8cf4\u62bd\u8c61\uff0c\u800c\u4e0d\u8981\u4f9d\u8cf4\u7d30\u7bc0")))),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u901a\u5e38\u958b\u767c\u904e\u7a0b\u6703\u5148\u5b9a\u7fa9",(0,s.kt)("inlineCode",{parentName:"p"},"interface"),"\uff0c\u5728\u5be6\u4f5c\u7d30\u7bc0")),(0,s.kt)("h2",{id:"service-\u62bd\u8c61\u5316"},"Service \u62bd\u8c61\u5316"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u76ee\u524d\u5c08\u6848\u7d50\u69cb")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"src\n\u2514\u2500user\n\u2502\n\u2514\u2500app.controller.spec.ts\n\u2502\n\u2514\u2500app.controller.ts\n\u2502\n\u2514\u2500app.module.ts\n\u2502\n\u2514\u2500app.service.ts\n\u2502\n\u2514\u2500main.ts\n")),(0,s.kt)("h3",{id:"\u5efa\u7acb-interface"},"\u5efa\u7acb interface"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5728 user \u8cc7\u6599\u593e\u5e95\u4e0b\uff0c\u5efa\u7acb\u4e00\u500b interfaces \u7684\u8cc7\u6599\u593e"),(0,s.kt)("li",{parentName:"ul"},"\u4e26\u5728\u88e1\u9762\u5efa\u7acb\u4e00\u500b user.service.interface.ts \u7684\u6a94\u6848")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"user\n\u2514\u2500dto\n\u2502 \u2514\u2500create-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500update-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500index.ts\n\u2502\n\u2514\u2500interface\n\u2502 \u2514\u2500user.service.interface.ts\n\u2502\n\u2514\u2500user.controller.ts\n\u2502\n\u2514\u2500user.service.ts\n\u2502\n\u2514\u2500user.module.ts\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5b9a\u7fa9 user.service \u6240\u8981\u958b\u653e\u7684\u4ecb\u9762")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { UpdateUserDto, CreateUserDto, UserDto } from '../dto';\n\nexport interface UserServiceInterface {\n  /** \u4f7f\u7528 store id \u67e5\u51fa\u5e95\u4e0b\u6240\u6709\u7684\u4f7f\u7528\u8005\n   *\n   * @param storeId store id\n   * @returns user list\n   */\n  getUserByStoreId(storeId: string): Promise<Array<UserDto>>;\n\n  /** \u4f7f\u7528 user id \u67e5\u8a62\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @returns user\n   */\n  getUserById(id: string): Promise<UserDto>;\n\n  /** \u65b0\u589e\u4f7f\u7528\u8005\n   *\n   * @param newUser new user\n   * @param userId update user id\n   * @returns new user list\n   */\n  createUser(newUser: CreateUserDto, userId: string): Promise<Array<UserDto>>;\n\n  /**\u66f4\u65b0\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @param oldUser edit user\n   * @param userId update user id\n   * @returns user list\n   */\n  updaterUser(\n    id: string,\n    oldUser: UpdateUserDto,\n    userId: string,\n  ): Promise<Array<UserDto>>;\n\n  /**\u522a\u9664\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @returns user list\n   */\n  deleteUser(id: string): Promise<Array<UserDto>>;\n}\n")),(0,s.kt)("h3",{id:"\u7e7c\u627f\u4e26\u5be6\u4f5c\u4ecb\u9762"},"\u7e7c\u627f\u4e26\u5be6\u4f5c\u4ecb\u9762"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u65bc user.service.ts \u7e7c\u627f\u4ecb\u9762\uff0c\u4e26\u4e14\u5be6\u4f5c\u7d30\u7bc0")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"user\n\u2514\u2500dto\n\u2502 \u2514\u2500create-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500update-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500index.ts\n\u2502\n\u2514\u2500interface\n\u2502 \u2514\u2500user.service.interface.ts\n\u2502\n\u2514\u2500user.controller.ts\n\u2502\n\u2514\u2500user.service.ts\n\u2502\n\u2514\u2500user.module.ts\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},(0,s.kt)("inlineCode",{parentName:"p"},"export class UserService implements UserServiceInterface")),(0,s.kt)("p",{parentName:"blockquote"},"\u4f7f\u7528implements\u4f86\u7e7c\u627f\u4ecb\u9762\u4e26\u5be6\u4f5c")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { Injectable } from '@nestjs/common';\nimport { UserServiceInterface } from './interfaces/user.service.interface';\nimport { UpdateUserDto, CreateUserDto, UserDto } from './dto';\n\n@Injectable()\nexport class UserService implements UserServiceInterface {\n  /** \u4f7f\u7528 store id \u67e5\u51fa\u5e95\u4e0b\u6240\u6709\u7684\u4f7f\u7528\u8005\n   *\n   * @param storeId store id\n   * @returns user list\n   */\n  async getUserByStoreId(storeId: string): Promise<Array<UserDto>> {\n    let users = new Array<UserDto>();\n\n    users.push({\n      id: 'f7541155-a4ff-4ca2-bfc5-a82ad98e2e86',\n      fullName: 'Big Pig',\n      email: 'BigPig@local.com',\n      phoneNumber: '0900000000',\n      userName: 'pig pig',\n    });\n\n    users.push({\n      id: '80f78f75-37b5-4977-bffc-5afc5db99123',\n      fullName: 'Pink Chicken',\n      email: 'PinkChicken@local.com',\n      phoneNumber: '0900000011',\n      userName: 'Hi Chicken',\n    });\n    return users;\n  }\n\n  /** \u4f7f\u7528 user id \u67e5\u8a62\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @returns user\n   */\n  async getUserById(id: string): Promise<UserDto> {\n    let user: UserDto = {\n      id: '80f78f75-37b5-4977-bffc-5afc5db99123',\n      fullName: 'Pink Chicken',\n      email: 'PinkChicken@local.com',\n      phoneNumber: '0900000011',\n      userName: 'Hi Chicken',\n    };\n\n    return user;\n  }\n  /** \u65b0\u589e\u4f7f\u7528\u8005\n   *\n   * @param newUser new user\n   * @param userId update user id\n   * @returns new user list\n   */\n  async createUser(\n    newUser: CreateUserDto,\n    userId: string,\n  ): Promise<Array<UserDto>> {\n    let users = new Array<UserDto>();\n\n    users.push({\n      id: '591afd77-32d0-44c2-a487-b6bd8850a0fe',\n      fullName: newUser.fullName,\n      email: newUser.email,\n      phoneNumber: newUser.phoneNumber,\n      userName: newUser.userName,\n    });\n\n    users.push({\n      id: 'f7541155-a4ff-4ca2-bfc5-a82ad98e2e86',\n      fullName: 'Big Pig',\n      email: 'BigPig@local.com',\n      phoneNumber: '0900000000',\n      userName: 'pig pig',\n    });\n\n    users.push({\n      id: '80f78f75-37b5-4977-bffc-5afc5db99123',\n      fullName: 'Pink Chicken',\n      email: 'PinkChicken@local.com',\n      phoneNumber: '0900000011',\n      userName: 'Hi Chicken',\n    });\n    return users;\n  }\n\n  /**\u66f4\u65b0\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @param oldUser edit user\n   * @param userId update user id\n   * @returns user list\n   */\n  async updaterUser(\n    id: string,\n    oldUser: UpdateUserDto,\n    userId: string,\n  ): Promise<Array<UserDto>> {\n    let users = new Array<UserDto>();\n\n    users.push({\n      id: 'f7541155-a4ff-4ca2-bfc5-a82ad98e2e86',\n      fullName: oldUser.fullName,\n      email: oldUser.email,\n      phoneNumber: oldUser.phoneNumber,\n      userName: oldUser.fullName,\n    });\n\n    users.push({\n      id: '80f78f75-37b5-4977-bffc-5afc5db99123',\n      fullName: 'Pink Chicken',\n      email: 'PinkChicken@local.com',\n      phoneNumber: '0900000011',\n      userName: 'Hi Chicken',\n    });\n    return users;\n  }\n\n  /**\u522a\u9664\u4f7f\u7528\u8005\n   *\n   * @param id user id\n   * @returns user list\n   */\n  async deleteUser(id: string): Promise<Array<UserDto>> {\n    let users = new Array<UserDto>();\n\n    users.push({\n      id: '80f78f75-37b5-4977-bffc-5afc5db99123',\n      fullName: 'Pink Chicken',\n      email: 'PinkChicken@local.com',\n      phoneNumber: '0900000011',\n      userName: 'Hi Chicken',\n    });\n    return users;\n  }\n}\n")),(0,s.kt)("h3",{id:"\u5c07\u670d\u52d9\u8a3b\u518a\u5230-module"},"\u5c07\u670d\u52d9\u8a3b\u518a\u5230 module"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"\u5230 user.module.ts \u8a3b\u518a\u670d\u52d9")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-text"},"user\n\u2514\u2500dto\n\u2502 \u2514\u2500create-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500update-user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500user.dto.ts\n\u2502 \u2502\n\u2502 \u2514\u2500index.ts\n\u2502\n\u2514\u2500interface\n\u2502 \u2514\u2500user.service.interface.ts\n\u2502\n\u2514\u2500user.controller.ts\n\u2502\n\u2514\u2500user.service.ts\n\u2502\n\u2514\u2500user.module.ts\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import { Module } from '@nestjs/common';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n@Module({\n  controllers: [UserController],\n  providers: [\n    {\n      provide: 'UserServiceInterface', // \u6ce8\u5165\u6642 tag \u7684\u6a19\u7c64\n      useClass: UserService, // \u670d\u52d9\u7684\u5be6\u9ad4\n    },\n  ],\n})\nexport class UserModule {}\n")),(0,s.kt)("h2",{id:"\u4f9d\u8cf4\u53cd\u8f49"},"\u4f9d\u8cf4\u53cd\u8f49"),(0,s.kt)("h3",{id:"\u5728-controller-\u4f9d\u8cf4\u62bd\u8c61"},"\u5728 Controller \u4f9d\u8cf4\u62bd\u8c61"),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u4ee5\u4e0b\u662f\u4fee\u6539\u524d\u7684\u7a0b\u5f0f\u78bc\uff0c controller \u662f\u76f4\u63a5\u4f9d\u8cf4 UserService \u7684\u5be6\u9ad4")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n}\n")),(0,s.kt)("blockquote",null,(0,s.kt)("p",{parentName:"blockquote"},"\u4fee\u6539\u5f8c\uff0c\u6703\u8b8a\u6210 controller \u4f9d\u8cf4\u7684\u662f UserServiceInterface \u9019\u4ecb\u9762"),(0,s.kt)("p",{parentName:"blockquote"},"\u5728\u900f\u904e\u6ce8\u5165\u6642\uff0cmodule \u4f86\u544a\u8a34 controller \u771f\u6b63\u61c9\u8a72\u4f7f\u7528\u54ea\u500b\u5be6\u9ad4")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"@Controller('user')\nexport class UserController {\n  constructor(\n    @Inject('UserServiceInterface')\n    private readonly userService: UserServiceInterface,\n  ) {}\n}\n")),(0,s.kt)("hr",null),(0,s.kt)("h3",{id:"\u5b8c\u6574-controller-\u7a0b\u5f0f\u78bc"},"\u5b8c\u6574 controller \u7a0b\u5f0f\u78bc"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Put,\n  Param,\n  Delete,\n  Inject,\n} from '@nestjs/common';\nimport { UpdateUserDto, CreateUserDto, UserDto } from './dto';\nimport { UserServiceInterface } from './interfaces/user.service.interface';\n\n@Controller('user')\nexport class UserController {\n  constructor(\n    @Inject('UserServiceInterface')\n    private readonly userService: UserServiceInterface,\n  ) {}\n\n  @Get(':storeId')\n  async findAll(@Param('id') storeId: string): Promise<Array<UserDto>> {\n    return await this.userService.getUserByStoreId(storeId);\n  }\n\n  @Get(':id')\n  async findOne(@Param('id') id: string): Promise<UserDto> {\n    return await this.userService.getUserById(id);\n  }\n\n  @Post()\n  async create(@Body() createCatDto: CreateUserDto) {\n    return await this.userService.createUser(createCatDto, '');\n  }\n\n  @Put(':id')\n  async update(@Param('id') id: string, @Body() updateCatDto: UpdateUserDto) {\n    return await this.userService.updaterUser(id, updateCatDto, '');\n  }\n\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return await this.userService.deleteUser(id);\n  }\n}\n")),(0,s.kt)("hr",null),(0,s.kt)("p",null,"Ref"),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://github.com/yuanyu90221/messenger_nestjs/tree/master/apps/auth"},"\u6881\u5927\u54e5 github")))}p.isMDXComponent=!0}}]);